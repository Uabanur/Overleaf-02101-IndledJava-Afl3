%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, November 18, 2016 4:14:48 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
3.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
169 365 61 29 rc
q
q
172 368 56 23 rc
q
[ 1.00000 0 0 1.00000 174.000 371.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -174.000 -371.000 ] concat
Q
[ 1.00000 0 0 1.00000 172.000 368.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 18 22 rc
newpath
45.4531 7.54687 m
45.3125 8.03125 l
44.2500 8.03125 l
43.4375 11.2343 l
43.0833 12.6406 42.7239 13.7291 42.3593 14.5000  c
41.8489 15.5937 41.2968 16.3489 40.7031 16.7656  c
40.2552 17.0781 39.8072 17.2343 39.3593 17.2343  c
39.0677 17.2343 38.8177 17.1458 38.6093 16.9687  c
38.4635 16.8541 38.3906 16.6979 38.3906 16.5000  c
38.3906 16.3437 38.4531 16.2083 38.5781 16.0937  c
38.7031 15.9791 38.8541 15.9218 39.0312 15.9218  c
39.1666 15.9218 39.2786 15.9635 39.3671 16.0468  c
39.4557 16.1302 39.5000 16.2239 39.5000 16.3281  c
39.5000 16.4322 39.4479 16.5312 39.3437 16.6250  c
39.2708 16.6979 39.2343 16.7500 39.2343 16.7812  c
39.2343 16.8229 39.2500 16.8593 39.2812 16.8906  c
39.3229 16.9218 39.3906 16.9375 39.4843 16.9375  c
39.6927 16.9375 39.9140 16.8724 40.1484 16.7421  c
40.3828 16.6119 40.5885 16.4166 40.7656 16.1562  c
40.9427 15.8958 41.1145 15.5156 41.2812 15.0156  c
41.3437 14.8072 41.5260 14.1302 41.8281 12.9843  c
43.1093 8.03125 l
41.8281 8.03125 l
41.9375 7.54687 l
42.3333 7.54687 42.6119 7.51822 42.7734 7.46093  c
42.9349 7.40364 43.0833 7.29687 43.2187 7.14062  c
43.3541 6.98437 43.5312 6.68750 43.7500 6.25000  c
44.0312 5.66666 44.3072 5.21354 44.5781 4.89062  c
44.9322 4.45312 45.3099 4.12500 45.7109 3.90625  c
46.1119 3.68750 46.4895 3.57812 46.8437 3.57812  c
47.2083 3.57812 47.5026 3.67447 47.7265 3.86718  c
47.9505 4.05989 48.0625 4.26562 48.0625 4.48437  c
48.0625 4.65104 48.0078 4.79427 47.8984 4.91406  c
47.7890 5.03385 47.6458 5.09375 47.4687 5.09375  c
47.3125 5.09375 47.1875 5.04947 47.0937 4.96093  c
47.0000 4.87239 46.9531 4.76562 46.9531 4.64062  c
46.9531 4.55729 46.9843 4.45833 47.0468 4.34375  c
47.1093 4.22916 47.1406 4.15625 47.1406 4.12500  c
47.1406 4.05208 47.1197 4.00000 47.0781 3.96875  c
47.0156 3.91666 46.9218 3.89062 46.7968 3.89062  c
46.4947 3.89062 46.2187 3.98958 45.9687 4.18750  c
45.6458 4.44791 45.3541 4.85416 45.0937 5.40625  c
44.9583 5.68750 44.7187 6.40104 44.3750 7.54687  c
45.4531 7.54687 l
h
f
newpath
49.1406 20.0000 m
45.1875 20.0000 l
45.1875 19.7812 l
47.2083 18.0208 48.5416 16.6354 49.1875 15.6250  c
49.4895 15.1666 49.6406 14.6770 49.6406 14.1562  c
49.6406 13.7500 49.5156 13.4192 49.2656 13.1640  c
49.0156 12.9088 48.6875 12.7812 48.2812 12.7812  c
47.7395 12.7812 47.2864 13.0468 46.9218 13.5781  c
46.7187 13.4843 l
46.9166 12.9843 47.2083 12.5937 47.5937 12.3125  c
47.9791 12.0312 48.3958 11.8906 48.8437 11.8906  c
49.3437 11.8906 49.7656 12.0625 50.1093 12.4062  c
50.4531 12.7500 50.6250 13.1718 50.6250 13.6718  c
50.6250 14.0156 50.5625 14.3333 50.4375 14.6250  c
50.2500 15.0833 49.9062 15.5937 49.4062 16.1562  c
48.6458 17.0208 47.6250 18.0208 46.3437 19.1562  c
48.3281 19.1562 l
48.6510 19.1562 48.9166 19.0885 49.1250 18.9531  c
49.3333 18.8177 49.4843 18.6406 49.5781 18.4218  c
49.8125 18.4218 l
49.1406 20.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 23.0000 l
56.0000 23.0000 l
56.0000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 172.000 368.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -172.000 -368.000 ] concat
cliprestore
newpath
169.000 365.000 m
169.000 394.000 l
230.000 394.000 l
230.000 365.000 l
h
W
Q
Q
1.00000 w
2 J
0 j
newpath
170.500 366.500 m
227.500 366.500 l
227.500 391.500 l
170.500 391.500 l
170.500 366.500 l
h
S
3.00000 w
0 J
1 j
Q
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 357 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
3.00000 w
0 J
1 j
q
q
14.0000 6.47259E-3 369.477 312.987 rc
newpath
17.0000 4.00647 m
18.9057 10.4078 l
20.5639 15.9225 l
22.4287 22.0632 l
24.3059 28.1791 l
26.1741 34.2008 l
27.9063 39.7256 l
29.6997 45.3873 l
31.5546 51.1796 l
33.4035 56.8895 l
35.3053 62.6964 l
36.9804 67.7553 l
38.8662 73.3879 l
40.7597 78.9769 l
42.5845 84.2998 l
44.2415 89.0797 l
46.2119 94.6969 l
47.8811 99.3988 l
49.8228 104.803 l
51.5415 109.528 l
53.4272 114.648 l
55.2228 119.463 l
57.0963 124.422 l
58.8168 128.919 l
60.6726 133.708 l
62.6003 138.614 l
64.2783 142.828 l
66.0906 147.320 l
67.9629 151.898 l
69.7946 156.312 l
71.5668 160.524 l
73.5346 165.132 l
75.3027 169.211 l
77.1905 173.502 l
78.9012 177.332 l
80.7714 181.458 l
82.5312 185.280 l
84.3706 189.214 l
86.1690 192.999 l
88.0517 196.897 l
89.8650 200.589 l
91.7193 204.302 l
93.5583 207.920 l
95.2482 211.189 l
97.1849 214.870 l
98.9172 218.104 l
100.764 221.490 l
102.532 224.671 l
104.494 228.135 l
106.194 231.077 l
108.123 234.350 l
109.882 237.274 l
111.805 240.405 l
113.464 243.052 l
115.354 246.004 l
117.180 248.792 l
119.004 251.516 l
120.822 254.168 l
122.568 256.658 l
124.456 259.287 l
126.255 261.729 l
128.148 264.235 l
129.862 266.446 l
131.756 268.826 l
133.571 271.043 l
135.381 273.193 l
137.271 275.374 l
139.013 277.324 l
140.796 279.262 l
142.765 281.333 l
144.548 283.146 l
146.371 284.939 l
148.225 286.698 l
149.930 288.259 l
151.746 289.864 l
153.549 291.395 l
155.478 292.966 l
157.180 294.295 l
159.143 295.761 l
160.915 297.023 l
162.669 298.213 l
164.554 299.430 l
166.447 300.584 l
168.169 301.577 l
169.998 302.570 l
171.783 303.480 l
173.718 304.399 l
175.393 305.138 l
177.316 305.922 l
179.123 306.596 l
180.914 307.203 l
182.705 307.752 l
184.533 308.250 l
186.469 308.709 l
188.246 309.069 l
189.999 309.367 l
191.873 309.622 l
193.743 309.811 l
195.421 309.926 l
197.409 309.993 l
199.073 309.993 l
201.019 309.927 l
202.876 309.799 l
204.534 309.630 l
206.399 309.379 l
208.276 309.061 l
210.145 308.679 l
211.877 308.267 l
213.670 307.781 l
215.525 307.216 l
217.374 306.588 l
219.276 305.877 l
220.951 305.194 l
222.837 304.363 l
224.730 303.462 l
226.555 302.530 l
228.212 301.630 l
230.182 300.494 l
231.852 299.474 l
233.793 298.223 l
235.512 297.057 l
237.398 295.714 l
239.193 294.374 l
241.067 292.912 l
242.787 291.512 l
244.643 289.939 l
246.571 288.238 l
248.249 286.701 l
250.061 284.981 l
251.933 283.141 l
253.765 281.277 l
255.537 279.415 l
257.505 277.278 l
259.273 275.296 l
261.161 273.116 l
262.872 271.084 l
264.742 268.799 l
266.502 266.590 l
268.341 264.219 l
270.139 261.840 l
272.022 259.285 l
273.835 256.761 l
275.690 254.117 l
277.529 251.432 l
279.219 248.909 l
281.155 245.952 l
282.888 243.248 l
284.735 240.304 l
286.502 237.426 l
288.465 234.162 l
290.165 231.278 l
292.094 227.939 l
293.852 224.836 l
295.776 221.375 l
297.435 218.334 l
299.325 214.808 l
301.150 211.338 l
302.975 207.809 l
304.792 204.232 l
306.539 200.737 l
308.426 196.895 l
310.225 193.171 l
312.119 189.187 l
313.833 185.523 l
315.727 181.410 l
317.542 177.407 l
319.352 173.354 l
321.242 169.054 l
322.984 165.035 l
324.767 160.861 l
326.736 156.183 l
328.519 151.886 l
330.342 147.429 l
332.196 142.834 l
333.900 138.553 l
335.717 133.930 l
337.520 129.282 l
339.449 124.243 l
341.150 119.738 l
343.114 114.474 l
344.886 109.662 l
346.639 104.842 l
348.525 99.5969 l
350.418 94.2630 l
352.140 89.3520 l
353.969 84.0762 l
355.754 78.8675 l
357.689 73.1541 l
359.363 68.1541 l
361.286 62.3470 l
363.094 56.8252 l
364.884 51.2968 l
366.676 45.7041 l
368.503 39.9384 l
370.440 33.7589 l
372.216 28.0314 l
373.969 22.3201 l
375.844 16.1514 l
377.714 9.93096 l
379.477 4.00647 l
S
cliprestore
newpath
0 0 m
0 357.000 l
390.000 357.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
17.0000 309.999 m
379.477 309.999 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
279 337 19 19 rc
newpath
283.203 352.000 m
283.328 351.328 l
283.849 351.328 284.343 351.229 284.812 351.031  c
285.281 350.833 285.708 350.536 286.093 350.140  c
288.296 347.812 l
286.500 344.671 l
286.322 344.390 286.104 344.216 285.843 344.148  c
285.583 344.080 285.197 344.046 284.687 344.046  c
284.812 343.375 l
288.875 343.375 l
288.750 344.046 l
288.583 344.046 288.419 344.085 288.257 344.164  c
288.096 344.242 288.000 344.359 287.968 344.515  c
287.958 344.567 287.968 344.619 288.000 344.671  c
289.234 346.843 l
290.765 345.234 l
290.953 345.015 291.062 344.817 291.093 344.640  c
291.114 344.484 291.080 344.346 290.992 344.226  c
290.903 344.106 290.776 344.046 290.609 344.046  c
290.734 343.375 l
294.328 343.375 l
294.203 344.046 l
293.682 344.046 293.184 344.145 292.710 344.343  c
292.237 344.541 291.807 344.838 291.421 345.234  c
289.468 347.281 l
291.437 350.703 l
291.635 350.994 291.862 351.171 292.117 351.234  c
292.372 351.296 292.755 351.328 293.265 351.328  c
293.140 352.000 l
289.062 352.000 l
289.187 351.328 l
289.343 351.328 289.505 351.289 289.671 351.210  c
289.838 351.132 289.937 351.015 289.968 350.859  c
289.979 350.807 289.974 350.755 289.953 350.703  c
288.546 348.265 l
286.750 350.140 l
286.572 350.328 286.463 350.526 286.421 350.734  c
286.390 350.901 286.419 351.041 286.507 351.156  c
286.596 351.270 286.724 351.328 286.890 351.328  c
286.765 352.000 l
283.203 352.000 l
h
f
Q
cliprestore
newpath
0 0 m
0 357.000 l
390.000 357.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
17.0000 309.999 m
17.0000 313.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 320 10 21 rc
newpath
22.5937 331.515 m
9.40625 331.515 l
9.40625 330.484 l
22.5937 330.484 l
22.5937 331.515 l
h
f
Q
newpath
20.9062 337.000 m
20.9062 336.328 l
22.5312 336.328 23.3437 336.119 23.3437 335.703  c
23.3437 325.109 l
22.6458 325.463 21.7916 325.640 20.7812 325.640  c
20.7812 324.984 l
22.3645 324.984 23.5625 324.557 24.3750 323.703  c
24.6406 323.703 l
24.6822 323.703 24.7187 323.718 24.7500 323.750  c
24.7812 323.781 24.7968 323.817 24.7968 323.859  c
24.7968 335.703 l
24.7968 336.119 25.6145 336.328 27.2500 336.328  c
27.2500 337.000 l
20.9062 337.000 l
h
33.6816 337.421 m
32.8274 337.421 32.1243 337.208 31.5722 336.781  c
31.0201 336.354 30.6009 335.802 30.3144 335.125  c
30.0279 334.447 29.8300 333.729 29.7207 332.968  c
29.6113 332.208 29.5566 331.421 29.5566 330.609  c
29.5566 328.734 29.8404 327.114 30.4082 325.750  c
30.9759 324.385 32.0670 323.703 33.6816 323.703  c
34.7753 323.703 35.6321 324.059 36.2519 324.773  c
36.8717 325.487 37.2806 326.356 37.4785 327.382  c
37.6764 328.408 37.7753 329.484 37.7753 330.609  c
37.7753 331.421 37.7259 332.205 37.6269 332.960  c
37.5279 333.716 37.3352 334.432 37.0488 335.109  c
36.7623 335.786 36.3404 336.341 35.7832 336.773  c
35.2259 337.205 34.5253 337.421 33.6816 337.421  c
h
33.6816 336.937 m
34.2545 336.937 34.7181 336.700 35.0722 336.226  c
35.4264 335.752 35.6816 335.161 35.8378 334.453  c
35.9941 333.744 36.0904 333.059 36.1269 332.398  c
36.1634 331.737 36.1816 331.036 36.1816 330.296  c
36.1816 329.296 36.1399 328.375 36.0566 327.531  c
35.9733 326.687 35.7441 325.916 35.3691 325.218  c
34.9941 324.520 34.4316 324.171 33.6816 324.171  c
32.9212 324.171 32.3535 324.520 31.9785 325.218  c
31.6035 325.916 31.3743 326.687 31.2910 327.531  c
31.2076 328.375 31.1660 329.296 31.1660 330.296  c
31.1660 331.036 31.1816 331.737 31.2128 332.398  c
31.2441 333.059 31.3431 333.747 31.5097 334.460  c
31.6764 335.174 31.9342 335.765 32.2832 336.234  c
32.6321 336.703 33.0983 336.937 33.6816 336.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
107.619 309.999 m
107.619 313.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
101 320 10 21 rc
newpath
117.593 331.515 m
104.406 331.515 l
104.406 330.484 l
117.593 330.484 l
117.593 331.515 l
h
f
Q
newpath
115.687 334.640 m
115.666 334.619 115.656 334.609 115.656 334.609  c
115.656 334.609 115.651 334.609 115.640 334.609  c
115.828 335.244 116.190 335.768 116.726 336.179  c
117.263 336.591 117.859 336.796 118.515 336.796  c
119.036 336.796 119.463 336.684 119.796 336.460  c
120.130 336.237 120.393 335.937 120.585 335.562  c
120.778 335.187 120.911 334.773 120.984 334.320  c
121.057 333.867 121.093 333.411 121.093 332.953  c
121.093 332.380 121.078 331.906 121.046 331.531  c
121.015 331.156 120.927 330.796 120.781 330.453  c
120.625 330.088 120.403 329.770 120.117 329.500  c
119.830 329.229 119.500 329.093 119.125 329.093  c
118.645 329.093 118.247 329.164 117.929 329.304  c
117.612 329.445 117.362 329.601 117.179 329.773  c
116.997 329.945 116.828 330.132 116.671 330.335  c
116.515 330.539 116.411 330.645 116.359 330.656  c
116.140 330.656 l
116.036 330.656 115.984 330.593 115.984 330.468  c
115.984 323.859 l
115.984 323.817 116.000 323.781 116.031 323.750  c
116.062 323.718 116.099 323.703 116.140 323.703  c
116.203 323.703 l
117.099 324.130 118.031 324.343 119.000 324.343  c
119.979 324.343 120.921 324.130 121.828 323.703  c
121.875 323.703 l
121.916 323.703 121.953 323.713 121.984 323.734  c
122.015 323.755 122.031 323.781 122.031 323.812  c
122.031 324.046 l
122.031 324.057 122.026 324.072 122.015 324.093  c
122.005 324.114 122.000 324.130 122.000 324.140  c
121.552 324.682 121.000 325.109 120.343 325.421  c
119.687 325.734 119.000 325.890 118.281 325.890  c
117.687 325.890 117.125 325.807 116.593 325.640  c
116.593 329.656 l
116.927 329.322 117.309 329.067 117.742 328.890  c
118.174 328.713 118.635 328.625 119.125 328.625  c
119.677 328.625 120.182 328.750 120.640 329.000  c
121.099 329.250 121.487 329.583 121.804 330.000  c
122.122 330.416 122.367 330.885 122.539 331.406  c
122.710 331.927 122.796 332.447 122.796 332.968  c
122.796 333.750 122.609 334.484 122.234 335.171  c
121.859 335.859 121.343 336.406 120.687 336.812  c
120.031 337.218 119.307 337.421 118.515 337.421  c
117.859 337.421 117.260 337.252 116.718 336.914  c
116.177 336.575 115.752 336.125 115.445 335.562  c
115.138 335.000 114.984 334.390 114.984 333.734  c
114.984 333.474 115.070 333.255 115.242 333.078  c
115.414 332.901 115.635 332.812 115.906 332.812  c
116.166 332.812 116.385 332.901 116.562 333.078  c
116.739 333.255 116.828 333.474 116.828 333.734  c
116.828 333.994 116.739 334.213 116.562 334.390  c
116.385 334.567 116.166 334.656 115.906 334.656  c
115.864 334.645 115.828 334.640 115.796 334.640  c
115.765 334.640 115.729 334.640 115.687 334.640  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 309.999 m
198.238 313.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
203.906 335.421 m
203.052 335.421 202.349 335.208 201.796 334.781  c
201.244 334.354 200.825 333.802 200.539 333.125  c
200.252 332.447 200.054 331.729 199.945 330.968  c
199.835 330.208 199.781 329.421 199.781 328.609  c
199.781 326.734 200.065 325.114 200.632 323.750  c
201.200 322.385 202.291 321.703 203.906 321.703  c
205.000 321.703 205.856 322.059 206.476 322.773  c
207.096 323.487 207.505 324.356 207.703 325.382  c
207.901 326.408 208.000 327.484 208.000 328.609  c
208.000 329.421 207.950 330.205 207.851 330.960  c
207.752 331.716 207.559 332.432 207.273 333.109  c
206.987 333.786 206.565 334.341 206.007 334.773  c
205.450 335.205 204.750 335.421 203.906 335.421  c
h
203.906 334.937 m
204.479 334.937 204.942 334.700 205.296 334.226  c
205.651 333.752 205.906 333.161 206.062 332.453  c
206.218 331.744 206.315 331.059 206.351 330.398  c
206.388 329.737 206.406 329.036 206.406 328.296  c
206.406 327.296 206.364 326.375 206.281 325.531  c
206.197 324.687 205.968 323.916 205.593 323.218  c
205.218 322.520 204.656 322.171 203.906 322.171  c
203.145 322.171 202.578 322.520 202.203 323.218  c
201.828 323.916 201.599 324.687 201.515 325.531  c
201.432 326.375 201.390 327.296 201.390 328.296  c
201.390 329.036 201.406 329.737 201.437 330.398  c
201.468 331.059 201.567 331.747 201.734 332.460  c
201.901 333.174 202.158 333.765 202.507 334.234  c
202.856 334.703 203.322 334.937 203.906 334.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
288.857 309.999 m
288.857 313.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
290.687 332.640 m
290.666 332.619 290.656 332.609 290.656 332.609  c
290.656 332.609 290.651 332.609 290.640 332.609  c
290.828 333.244 291.190 333.768 291.726 334.179  c
292.263 334.591 292.859 334.796 293.515 334.796  c
294.036 334.796 294.463 334.684 294.796 334.460  c
295.130 334.237 295.393 333.937 295.585 333.562  c
295.778 333.187 295.911 332.773 295.984 332.320  c
296.057 331.867 296.093 331.411 296.093 330.953  c
296.093 330.380 296.078 329.906 296.046 329.531  c
296.015 329.156 295.927 328.796 295.781 328.453  c
295.625 328.088 295.403 327.770 295.117 327.500  c
294.830 327.229 294.500 327.093 294.125 327.093  c
293.645 327.093 293.247 327.164 292.929 327.304  c
292.612 327.445 292.362 327.601 292.179 327.773  c
291.997 327.945 291.828 328.132 291.671 328.335  c
291.515 328.539 291.411 328.645 291.359 328.656  c
291.140 328.656 l
291.036 328.656 290.984 328.593 290.984 328.468  c
290.984 321.859 l
290.984 321.817 291.000 321.781 291.031 321.750  c
291.062 321.718 291.099 321.703 291.140 321.703  c
291.203 321.703 l
292.099 322.130 293.031 322.343 294.000 322.343  c
294.979 322.343 295.921 322.130 296.828 321.703  c
296.875 321.703 l
296.916 321.703 296.953 321.713 296.984 321.734  c
297.015 321.755 297.031 321.781 297.031 321.812  c
297.031 322.046 l
297.031 322.057 297.026 322.072 297.015 322.093  c
297.005 322.114 297.000 322.130 297.000 322.140  c
296.552 322.682 296.000 323.109 295.343 323.421  c
294.687 323.734 294.000 323.890 293.281 323.890  c
292.687 323.890 292.125 323.807 291.593 323.640  c
291.593 327.656 l
291.927 327.322 292.309 327.067 292.742 326.890  c
293.174 326.713 293.635 326.625 294.125 326.625  c
294.677 326.625 295.182 326.750 295.640 327.000  c
296.099 327.250 296.487 327.583 296.804 328.000  c
297.122 328.416 297.367 328.885 297.539 329.406  c
297.710 329.927 297.796 330.447 297.796 330.968  c
297.796 331.750 297.609 332.484 297.234 333.171  c
296.859 333.859 296.343 334.406 295.687 334.812  c
295.031 335.218 294.307 335.421 293.515 335.421  c
292.859 335.421 292.260 335.252 291.718 334.914  c
291.177 334.575 290.752 334.125 290.445 333.562  c
290.138 333.000 289.984 332.390 289.984 331.734  c
289.984 331.474 290.070 331.255 290.242 331.078  c
290.414 330.901 290.635 330.812 290.906 330.812  c
291.166 330.812 291.385 330.901 291.562 331.078  c
291.739 331.255 291.828 331.474 291.828 331.734  c
291.828 331.994 291.739 332.213 291.562 332.390  c
291.385 332.567 291.166 332.656 290.906 332.656  c
290.864 332.645 290.828 332.640 290.796 332.640  c
290.765 332.640 290.729 332.640 290.687 332.640  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
379.477 309.999 m
379.477 313.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
376.906 335.000 m
376.906 334.328 l
378.531 334.328 379.343 334.119 379.343 333.703  c
379.343 323.109 l
378.645 323.463 377.791 323.640 376.781 323.640  c
376.781 322.984 l
378.364 322.984 379.562 322.557 380.375 321.703  c
380.640 321.703 l
380.682 321.703 380.718 321.718 380.750 321.750  c
380.781 321.781 380.796 321.817 380.796 321.859  c
380.796 333.703 l
380.796 334.119 381.614 334.328 383.250 334.328  c
383.250 335.000 l
376.906 335.000 l
h
389.681 335.421 m
388.827 335.421 388.124 335.208 387.572 334.781  c
387.020 334.354 386.600 333.802 386.314 333.125  c
386.028 332.447 385.830 331.729 385.720 330.968  c
385.611 330.208 385.556 329.421 385.556 328.609  c
385.556 326.734 385.840 325.114 386.408 323.750  c
386.975 322.385 388.067 321.703 389.681 321.703  c
390.775 321.703 391.632 322.059 392.252 322.773  c
392.871 323.487 393.280 324.356 393.478 325.382  c
393.676 326.408 393.775 327.484 393.775 328.609  c
393.775 329.421 393.725 330.205 393.627 330.960  c
393.528 331.716 393.335 332.432 393.048 333.109  c
392.762 333.786 392.340 334.341 391.783 334.773  c
391.225 335.205 390.525 335.421 389.681 335.421  c
h
389.681 334.937 m
390.254 334.937 390.718 334.700 391.072 334.226  c
391.426 333.752 391.681 333.161 391.837 332.453  c
391.994 331.744 392.090 331.059 392.127 330.398  c
392.163 329.737 392.181 329.036 392.181 328.296  c
392.181 327.296 392.140 326.375 392.056 325.531  c
391.973 324.687 391.744 323.916 391.369 323.218  c
390.994 322.520 390.431 322.171 389.681 322.171  c
388.921 322.171 388.353 322.520 387.978 323.218  c
387.603 323.916 387.374 324.687 387.291 325.531  c
387.207 326.375 387.166 327.296 387.166 328.296  c
387.166 329.036 387.181 329.737 387.212 330.398  c
387.244 331.059 387.343 331.747 387.509 332.460  c
387.676 333.174 387.934 333.765 388.283 334.234  c
388.632 334.703 389.098 334.937 389.681 334.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
35.1238 309.999 m
35.1238 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
53.2477 309.999 m
53.2477 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
71.3715 309.999 m
71.3715 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
89.4954 309.999 m
89.4954 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
125.743 309.999 m
125.743 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
143.867 309.999 m
143.867 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
161.990 309.999 m
161.990 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
180.114 309.999 m
180.114 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
216.362 309.999 m
216.362 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
234.486 309.999 m
234.486 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
252.610 309.999 m
252.610 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
270.734 309.999 m
270.734 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
306.981 309.999 m
306.981 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
325.105 309.999 m
325.105 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
343.229 309.999 m
343.229 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
361.353 309.999 m
361.353 311.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
198.238 309.993 m
198.238 4.00647 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
150 148 8 19 rc
Q
cliprestore
newpath
0 0 m
0 357.000 l
390.000 357.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 309.999 m
194.238 309.999 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 237.144 m
194.238 237.144 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.687 245.640 m
178.666 245.619 178.656 245.609 178.656 245.609  c
178.656 245.609 178.651 245.609 178.640 245.609  c
178.828 246.244 179.190 246.768 179.726 247.179  c
180.263 247.591 180.859 247.796 181.515 247.796  c
182.036 247.796 182.463 247.684 182.796 247.460  c
183.130 247.237 183.393 246.937 183.585 246.562  c
183.778 246.187 183.911 245.773 183.984 245.320  c
184.057 244.867 184.093 244.411 184.093 243.953  c
184.093 243.380 184.078 242.906 184.046 242.531  c
184.015 242.156 183.927 241.796 183.781 241.453  c
183.625 241.088 183.403 240.770 183.117 240.500  c
182.830 240.229 182.500 240.093 182.125 240.093  c
181.645 240.093 181.247 240.164 180.929 240.304  c
180.612 240.445 180.362 240.601 180.179 240.773  c
179.997 240.945 179.828 241.132 179.671 241.335  c
179.515 241.539 179.411 241.645 179.359 241.656  c
179.140 241.656 l
179.036 241.656 178.984 241.593 178.984 241.468  c
178.984 234.859 l
178.984 234.817 179.000 234.781 179.031 234.750  c
179.062 234.718 179.099 234.703 179.140 234.703  c
179.203 234.703 l
180.099 235.130 181.031 235.343 182.000 235.343  c
182.979 235.343 183.921 235.130 184.828 234.703  c
184.875 234.703 l
184.916 234.703 184.953 234.713 184.984 234.734  c
185.015 234.755 185.031 234.781 185.031 234.812  c
185.031 235.046 l
185.031 235.057 185.026 235.072 185.015 235.093  c
185.005 235.114 185.000 235.130 185.000 235.140  c
184.552 235.682 184.000 236.109 183.343 236.421  c
182.687 236.734 182.000 236.890 181.281 236.890  c
180.687 236.890 180.125 236.807 179.593 236.640  c
179.593 240.656 l
179.927 240.322 180.309 240.067 180.742 239.890  c
181.174 239.713 181.635 239.625 182.125 239.625  c
182.677 239.625 183.182 239.750 183.640 240.000  c
184.099 240.250 184.487 240.583 184.804 241.000  c
185.122 241.416 185.367 241.885 185.539 242.406  c
185.710 242.927 185.796 243.447 185.796 243.968  c
185.796 244.750 185.609 245.484 185.234 246.171  c
184.859 246.859 184.343 247.406 183.687 247.812  c
183.031 248.218 182.307 248.421 181.515 248.421  c
180.859 248.421 180.260 248.252 179.718 247.914  c
179.177 247.575 178.752 247.125 178.445 246.562  c
178.138 246.000 177.984 245.390 177.984 244.734  c
177.984 244.474 178.070 244.255 178.242 244.078  c
178.414 243.901 178.635 243.812 178.906 243.812  c
179.166 243.812 179.385 243.901 179.562 244.078  c
179.739 244.255 179.828 244.474 179.828 244.734  c
179.828 244.994 179.739 245.213 179.562 245.390  c
179.385 245.567 179.166 245.656 178.906 245.656  c
178.864 245.645 178.828 245.640 178.796 245.640  c
178.765 245.640 178.729 245.640 178.687 245.640  c
h
191.681 248.421 m
190.827 248.421 190.124 248.208 189.572 247.781  c
189.020 247.354 188.600 246.802 188.314 246.125  c
188.028 245.447 187.830 244.729 187.720 243.968  c
187.611 243.208 187.556 242.421 187.556 241.609  c
187.556 239.734 187.840 238.114 188.408 236.750  c
188.975 235.385 190.067 234.703 191.681 234.703  c
192.775 234.703 193.632 235.059 194.252 235.773  c
194.871 236.487 195.280 237.356 195.478 238.382  c
195.676 239.408 195.775 240.484 195.775 241.609  c
195.775 242.421 195.725 243.205 195.627 243.960  c
195.528 244.716 195.335 245.432 195.048 246.109  c
194.762 246.786 194.340 247.341 193.783 247.773  c
193.225 248.205 192.525 248.421 191.681 248.421  c
h
191.681 247.937 m
192.254 247.937 192.718 247.700 193.072 247.226  c
193.426 246.752 193.681 246.161 193.837 245.453  c
193.994 244.744 194.090 244.059 194.127 243.398  c
194.163 242.737 194.181 242.036 194.181 241.296  c
194.181 240.296 194.140 239.375 194.056 238.531  c
193.973 237.687 193.744 236.916 193.369 236.218  c
192.994 235.520 192.431 235.171 191.681 235.171  c
190.921 235.171 190.353 235.520 189.978 236.218  c
189.603 236.916 189.374 237.687 189.291 238.531  c
189.207 239.375 189.166 240.296 189.166 241.296  c
189.166 242.036 189.181 242.737 189.212 243.398  c
189.244 244.059 189.343 244.747 189.509 245.460  c
189.676 246.174 189.934 246.765 190.283 247.234  c
190.632 247.703 191.098 247.937 191.681 247.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 164.288 m
194.238 164.288 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
168.906 175.000 m
168.906 174.328 l
170.531 174.328 171.343 174.119 171.343 173.703  c
171.343 163.109 l
170.645 163.463 169.791 163.640 168.781 163.640  c
168.781 162.984 l
170.364 162.984 171.562 162.557 172.375 161.703  c
172.640 161.703 l
172.682 161.703 172.718 161.718 172.750 161.750  c
172.781 161.781 172.796 161.817 172.796 161.859  c
172.796 173.703 l
172.796 174.119 173.614 174.328 175.250 174.328  c
175.250 175.000 l
168.906 175.000 l
h
181.681 175.421 m
180.827 175.421 180.124 175.208 179.572 174.781  c
179.020 174.354 178.600 173.802 178.314 173.125  c
178.028 172.447 177.830 171.729 177.720 170.968  c
177.611 170.208 177.556 169.421 177.556 168.609  c
177.556 166.734 177.840 165.114 178.408 163.750  c
178.975 162.385 180.067 161.703 181.681 161.703  c
182.775 161.703 183.632 162.059 184.252 162.773  c
184.871 163.487 185.280 164.356 185.478 165.382  c
185.676 166.408 185.775 167.484 185.775 168.609  c
185.775 169.421 185.725 170.205 185.627 170.960  c
185.528 171.716 185.335 172.432 185.048 173.109  c
184.762 173.786 184.340 174.341 183.783 174.773  c
183.225 175.205 182.525 175.421 181.681 175.421  c
h
181.681 174.937 m
182.254 174.937 182.718 174.700 183.072 174.226  c
183.426 173.752 183.681 173.161 183.837 172.453  c
183.994 171.744 184.090 171.059 184.127 170.398  c
184.163 169.737 184.181 169.036 184.181 168.296  c
184.181 167.296 184.140 166.375 184.056 165.531  c
183.973 164.687 183.744 163.916 183.369 163.218  c
182.994 162.520 182.431 162.171 181.681 162.171  c
180.921 162.171 180.353 162.520 179.978 163.218  c
179.603 163.916 179.374 164.687 179.291 165.531  c
179.207 166.375 179.166 167.296 179.166 168.296  c
179.166 169.036 179.181 169.737 179.212 170.398  c
179.244 171.059 179.343 171.747 179.509 172.460  c
179.676 173.174 179.934 173.765 180.283 174.234  c
180.632 174.703 181.098 174.937 181.681 174.937  c
h
191.457 175.421 m
190.602 175.421 189.899 175.208 189.347 174.781  c
188.795 174.354 188.376 173.802 188.089 173.125  c
187.803 172.447 187.605 171.729 187.496 170.968  c
187.386 170.208 187.332 169.421 187.332 168.609  c
187.332 166.734 187.615 165.114 188.183 163.750  c
188.751 162.385 189.842 161.703 191.457 161.703  c
192.550 161.703 193.407 162.059 194.027 162.773  c
194.647 163.487 195.056 164.356 195.253 165.382  c
195.451 166.408 195.550 167.484 195.550 168.609  c
195.550 169.421 195.501 170.205 195.402 170.960  c
195.303 171.716 195.110 172.432 194.824 173.109  c
194.537 173.786 194.115 174.341 193.558 174.773  c
193.001 175.205 192.300 175.421 191.457 175.421  c
h
191.457 174.937 m
192.029 174.937 192.493 174.700 192.847 174.226  c
193.201 173.752 193.457 173.161 193.613 172.453  c
193.769 171.744 193.865 171.059 193.902 170.398  c
193.938 169.737 193.957 169.036 193.957 168.296  c
193.957 167.296 193.915 166.375 193.832 165.531  c
193.748 164.687 193.519 163.916 193.144 163.218  c
192.769 162.520 192.207 162.171 191.457 162.171  c
190.696 162.171 190.128 162.520 189.753 163.218  c
189.378 163.916 189.149 164.687 189.066 165.531  c
188.983 166.375 188.941 167.296 188.941 168.296  c
188.941 169.036 188.957 169.737 188.988 170.398  c
189.019 171.059 189.118 171.747 189.285 172.460  c
189.451 173.174 189.709 173.765 190.058 174.234  c
190.407 174.703 190.873 174.937 191.457 174.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 91.4331 m
194.238 91.4331 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
168.906 102.000 m
168.906 101.328 l
170.531 101.328 171.343 101.119 171.343 100.703  c
171.343 90.1093 l
170.645 90.4635 169.791 90.6406 168.781 90.6406  c
168.781 89.9843 l
170.364 89.9843 171.562 89.5572 172.375 88.7031  c
172.640 88.7031 l
172.682 88.7031 172.718 88.7187 172.750 88.7500  c
172.781 88.7812 172.796 88.8177 172.796 88.8593  c
172.796 100.703 l
172.796 101.119 173.614 101.328 175.250 101.328  c
175.250 102.000 l
168.906 102.000 l
h
178.462 99.6406 m
178.442 99.6197 178.431 99.6093 178.431 99.6093  c
178.431 99.6093 178.426 99.6093 178.416 99.6093  c
178.603 100.244 178.965 100.768 179.502 101.179  c
180.038 101.591 180.634 101.796 181.291 101.796  c
181.811 101.796 182.238 101.684 182.572 101.460  c
182.905 101.237 183.168 100.937 183.361 100.562  c
183.554 100.187 183.686 99.7734 183.759 99.3203  c
183.832 98.8671 183.869 98.4114 183.869 97.9531  c
183.869 97.3802 183.853 96.9062 183.822 96.5312  c
183.791 96.1562 183.702 95.7968 183.556 95.4531  c
183.400 95.0885 183.179 94.7708 182.892 94.5000  c
182.606 94.2291 182.275 94.0937 181.900 94.0937  c
181.421 94.0937 181.022 94.1640 180.705 94.3046  c
180.387 94.4453 180.137 94.6015 179.955 94.7734  c
179.772 94.9453 179.603 95.1328 179.447 95.3359  c
179.291 95.5390 179.186 95.6458 179.134 95.6562  c
178.916 95.6562 l
178.811 95.6562 178.759 95.5937 178.759 95.4687  c
178.759 88.8593 l
178.759 88.8177 178.775 88.7812 178.806 88.7500  c
178.837 88.7187 178.874 88.7031 178.916 88.7031  c
178.978 88.7031 l
179.874 89.1302 180.806 89.3437 181.775 89.3437  c
182.754 89.3437 183.697 89.1302 184.603 88.7031  c
184.650 88.7031 l
184.692 88.7031 184.728 88.7135 184.759 88.7343  c
184.791 88.7552 184.806 88.7812 184.806 88.8125  c
184.806 89.0468 l
184.806 89.0572 184.801 89.0729 184.791 89.0937  c
184.780 89.1145 184.775 89.1302 184.775 89.1406  c
184.327 89.6822 183.775 90.1093 183.119 90.4218  c
182.462 90.7343 181.775 90.8906 181.056 90.8906  c
180.462 90.8906 179.900 90.8072 179.369 90.6406  c
179.369 94.6562 l
179.702 94.3229 180.085 94.0677 180.517 93.8906  c
180.949 93.7135 181.410 93.6250 181.900 93.6250  c
182.452 93.6250 182.957 93.7500 183.416 94.0000  c
183.874 94.2500 184.262 94.5833 184.580 95.0000  c
184.897 95.4166 185.142 95.8854 185.314 96.4062  c
185.486 96.9270 185.572 97.4479 185.572 97.9687  c
185.572 98.7500 185.384 99.4843 185.009 100.171  c
184.634 100.859 184.119 101.406 183.462 101.812  c
182.806 102.218 182.082 102.421 181.291 102.421  c
180.634 102.421 180.035 102.252 179.494 101.914  c
178.952 101.575 178.528 101.125 178.220 100.562  c
177.913 100.000 177.759 99.3906 177.759 98.7343  c
177.759 98.4739 177.845 98.2552 178.017 98.0781  c
178.189 97.9010 178.410 97.8125 178.681 97.8125  c
178.942 97.8125 179.160 97.9010 179.337 98.0781  c
179.515 98.2552 179.603 98.4739 179.603 98.7343  c
179.603 98.9947 179.515 99.2135 179.337 99.3906  c
179.160 99.5677 178.942 99.6562 178.681 99.6562  c
178.640 99.6458 178.603 99.6406 178.572 99.6406  c
178.541 99.6406 178.504 99.6406 178.462 99.6406  c
h
191.457 102.421 m
190.602 102.421 189.899 102.208 189.347 101.781  c
188.795 101.354 188.376 100.802 188.089 100.125  c
187.803 99.4479 187.605 98.7291 187.496 97.9687  c
187.386 97.2083 187.332 96.4218 187.332 95.6093  c
187.332 93.7343 187.615 92.1145 188.183 90.7500  c
188.751 89.3854 189.842 88.7031 191.457 88.7031  c
192.550 88.7031 193.407 89.0599 194.027 89.7734  c
194.647 90.4869 195.056 91.3567 195.253 92.3828  c
195.451 93.4088 195.550 94.4843 195.550 95.6093  c
195.550 96.4218 195.501 97.2057 195.402 97.9609  c
195.303 98.7161 195.110 99.4322 194.824 100.109  c
194.537 100.786 194.115 101.341 193.558 101.773  c
193.001 102.205 192.300 102.421 191.457 102.421  c
h
191.457 101.937 m
192.029 101.937 192.493 101.700 192.847 101.226  c
193.201 100.752 193.457 100.161 193.613 99.4531  c
193.769 98.7447 193.865 98.0599 193.902 97.3984  c
193.938 96.7369 193.957 96.0364 193.957 95.2968  c
193.957 94.2968 193.915 93.3750 193.832 92.5312  c
193.748 91.6875 193.519 90.9166 193.144 90.2187  c
192.769 89.5208 192.207 89.1718 191.457 89.1718  c
190.696 89.1718 190.128 89.5208 189.753 90.2187  c
189.378 90.9166 189.149 91.6875 189.066 92.5312  c
188.983 93.3750 188.941 94.2968 188.941 95.2968  c
188.941 96.0364 188.957 96.7369 188.988 97.3984  c
189.019 98.0599 189.118 98.7474 189.285 99.4609  c
189.451 100.174 189.709 100.765 190.058 101.234  c
190.407 101.703 190.873 101.937 191.457 101.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 18.5776 m
194.238 18.5776 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
167.984 29.0000 m
167.984 28.4687 l
167.984 28.4479 168.000 28.4218 168.031 28.3906  c
171.046 25.0000 l
171.724 24.2395 172.252 23.6224 172.632 23.1484  c
173.013 22.6744 173.346 22.1276 173.632 21.5078  c
173.919 20.8880 174.062 20.2447 174.062 19.5781  c
174.062 18.6927 173.820 17.9349 173.335 17.3046  c
172.851 16.6744 172.177 16.3593 171.312 16.3593  c
170.708 16.3593 170.171 16.5599 169.703 16.9609  c
169.234 17.3619 168.911 17.8697 168.734 18.4843  c
168.786 18.4739 168.864 18.4687 168.968 18.4687  c
169.145 18.4687 169.309 18.5104 169.460 18.5937  c
169.612 18.6770 169.729 18.7942 169.812 18.9453  c
169.895 19.0963 169.937 19.2604 169.937 19.4375  c
169.937 19.6041 169.895 19.7656 169.812 19.9218  c
169.729 20.0781 169.612 20.2005 169.460 20.2890  c
169.309 20.3776 169.145 20.4218 168.968 20.4218  c
168.687 20.4218 168.453 20.3229 168.265 20.1250  c
168.078 19.9270 167.984 19.6979 167.984 19.4375  c
167.984 18.9270 168.075 18.4505 168.257 18.0078  c
168.440 17.5651 168.703 17.1640 169.046 16.8046  c
169.390 16.4453 169.781 16.1718 170.218 15.9843  c
170.656 15.7968 171.125 15.7031 171.625 15.7031  c
172.385 15.7031 173.083 15.8619 173.718 16.1796  c
174.354 16.4974 174.859 16.9505 175.234 17.5390  c
175.609 18.1276 175.796 18.8072 175.796 19.5781  c
175.796 20.1718 175.674 20.7213 175.429 21.2265  c
175.184 21.7317 174.875 22.1953 174.500 22.6171  c
174.125 23.0390 173.617 23.5364 172.976 24.1093  c
172.335 24.6822 171.921 25.0572 171.734 25.2343  c
169.437 27.5000 l
171.484 27.5000 l
172.411 27.5000 173.187 27.4921 173.812 27.4765  c
174.437 27.4609 174.765 27.4322 174.796 27.3906  c
174.953 27.2239 175.114 26.6145 175.281 25.5625  c
175.796 25.5625 l
175.281 29.0000 l
167.984 29.0000 l
h
181.681 29.4218 m
180.827 29.4218 180.124 29.2083 179.572 28.7812  c
179.020 28.3541 178.600 27.8020 178.314 27.1250  c
178.028 26.4479 177.830 25.7291 177.720 24.9687  c
177.611 24.2083 177.556 23.4218 177.556 22.6093  c
177.556 20.7343 177.840 19.1145 178.408 17.7500  c
178.975 16.3854 180.067 15.7031 181.681 15.7031  c
182.775 15.7031 183.632 16.0599 184.252 16.7734  c
184.871 17.4869 185.280 18.3567 185.478 19.3828  c
185.676 20.4088 185.775 21.4843 185.775 22.6093  c
185.775 23.4218 185.725 24.2057 185.627 24.9609  c
185.528 25.7161 185.335 26.4322 185.048 27.1093  c
184.762 27.7864 184.340 28.3411 183.783 28.7734  c
183.225 29.2057 182.525 29.4218 181.681 29.4218  c
h
181.681 28.9375 m
182.254 28.9375 182.718 28.7005 183.072 28.2265  c
183.426 27.7526 183.681 27.1614 183.837 26.4531  c
183.994 25.7447 184.090 25.0599 184.127 24.3984  c
184.163 23.7369 184.181 23.0364 184.181 22.2968  c
184.181 21.2968 184.140 20.3750 184.056 19.5312  c
183.973 18.6875 183.744 17.9166 183.369 17.2187  c
182.994 16.5208 182.431 16.1718 181.681 16.1718  c
180.921 16.1718 180.353 16.5208 179.978 17.2187  c
179.603 17.9166 179.374 18.6875 179.291 19.5312  c
179.207 20.3750 179.166 21.2968 179.166 22.2968  c
179.166 23.0364 179.181 23.7369 179.212 24.3984  c
179.244 25.0599 179.343 25.7474 179.509 26.4609  c
179.676 27.1744 179.934 27.7656 180.283 28.2343  c
180.632 28.7031 181.098 28.9375 181.681 28.9375  c
h
191.457 29.4218 m
190.602 29.4218 189.899 29.2083 189.347 28.7812  c
188.795 28.3541 188.376 27.8020 188.089 27.1250  c
187.803 26.4479 187.605 25.7291 187.496 24.9687  c
187.386 24.2083 187.332 23.4218 187.332 22.6093  c
187.332 20.7343 187.615 19.1145 188.183 17.7500  c
188.751 16.3854 189.842 15.7031 191.457 15.7031  c
192.550 15.7031 193.407 16.0599 194.027 16.7734  c
194.647 17.4869 195.056 18.3567 195.253 19.3828  c
195.451 20.4088 195.550 21.4843 195.550 22.6093  c
195.550 23.4218 195.501 24.2057 195.402 24.9609  c
195.303 25.7161 195.110 26.4322 194.824 27.1093  c
194.537 27.7864 194.115 28.3411 193.558 28.7734  c
193.001 29.2057 192.300 29.4218 191.457 29.4218  c
h
191.457 28.9375 m
192.029 28.9375 192.493 28.7005 192.847 28.2265  c
193.201 27.7526 193.457 27.1614 193.613 26.4531  c
193.769 25.7447 193.865 25.0599 193.902 24.3984  c
193.938 23.7369 193.957 23.0364 193.957 22.2968  c
193.957 21.2968 193.915 20.3750 193.832 19.5312  c
193.748 18.6875 193.519 17.9166 193.144 17.2187  c
192.769 16.5208 192.207 16.1718 191.457 16.1718  c
190.696 16.1718 190.128 16.5208 189.753 17.2187  c
189.378 17.9166 189.149 18.6875 189.066 19.5312  c
188.983 20.3750 188.941 21.2968 188.941 22.2968  c
188.941 23.0364 188.957 23.7369 188.988 24.3984  c
189.019 25.0599 189.118 25.7474 189.285 26.4609  c
189.451 27.1744 189.709 27.7656 190.058 28.2343  c
190.407 28.7031 190.873 28.9375 191.457 28.9375  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 295.428 m
196.238 295.428 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 280.857 m
196.238 280.857 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 266.286 m
196.238 266.286 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 251.715 m
196.238 251.715 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 222.573 m
196.238 222.573 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 208.002 m
196.238 208.002 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 193.431 m
196.238 193.431 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 178.859 m
196.238 178.859 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 149.717 m
196.238 149.717 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 135.146 m
196.238 135.146 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 120.575 m
196.238 120.575 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 106.004 m
196.238 106.004 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 76.8620 m
196.238 76.8620 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 62.2909 m
196.238 62.2909 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 47.7198 m
196.238 47.7198 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 33.1486 m
196.238 33.1486 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
198.238 4.00647 m
196.238 4.00647 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
